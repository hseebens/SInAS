graphics.off()
rm(list=ls())

library(sf)
library(RColorBrewer)
library(shape) # for legend

setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory

source("../../SpatialSpread/owncolleg.r") # adjusted color legend


regions <- st_read(dsn="../../IndicatorAliens/Shapefile",layer="GRIIS_2.1",stringsAsFactors = F)

alldat <- read.table(file.path("UnifAlien","Output","AlienSpecies_MultipleDBs_Masterfile_vs2.3.csv"),header=T,stringsAsFactors = F)


# alldat <- subset(alldat,IsInvasive=="Invasive")

# identify islands
islands_regions <- st_intersects(regions) # get islands from polygons (not comprehensive!)
islands_regions <- sort(regions$Region[which(unlist(lapply(islands_regions,length))==1)])

islandnames <- read.table("../../Data/Regions/IslandNames.csv",stringsAsFactors = F)[,1] # get additional islands from first record DB
islands <- sort(c(islands_regions,islandnames[!islandnames%in%islands_regions]))
islands <- islands[!islands%in%c("Aland Islands","Antarctica","Bonaire","Virgin Islands, US","British Virgin Islands",
                                 "Cocos (Keeling) Islands","Corse","Greenland","Micronesia, Federated States of",
                                 "Pitcairn Islands","Reunion","Saint Barthelemy","Saint Helena","Turks and Caicos",
                                 "US Minor Outlying Islands","Ascension","Tristan da Cunha","Socotra Island","South Africa",
                                 "Croatia","Tunisia","Togo","Singapore")]
# islands <- islands[!islands%in%regions$Region]


nspec_reg <- aggregate(alldat$Taxon,by=list(Region=alldat$Location),length)
nspec_reg$x[nspec_reg$x>4000] <- 4000


spatial_nspec <- merge(regions,nspec_reg,by="Region",all.x=T)
# spatial_nspec[is.na(spatial_nspec$x),]



# x11(width=8,height=4)
# plot(spatial_nspec["x"],main=NULL,pal=rev(brewer.pal(n=10,name="Spectral")), key.pos = 4, axes = F, key.width = lcm(1.3), key.length = 1.0)


### colour coding ######
spatial_nspec$col_norm <- round(spatial_nspec$x/max(spatial_nspec$x,na.rm=T)*99)+1
cols <- colorRampPalette((brewer.pal(n=9,name="YlOrRd")[1:9]))(max(spatial_nspec$col_norm,na.rm=T))
# cols <- rev(colorRampPalette(c("brown4","brown3","orange","yellow","darkolivegreen3","lightblue"))(max(data_regs$col_norm,na.rm=T)))
# cols <- colorRampPalette(c("yellow","yellow","yellow","orange","darkred"))(max(n_sp$Freq_norm)) # 
# cols <- (colorRampPalette(cols)(max(n_sp$Freq_norm)))
spatial_nspec$col <- cols[spatial_nspec$col_norm]
spatial_nspec$col[is.na(spatial_nspec$col_norm)] <- grey(0.95)
spatial_nspec$norm_isl <- spatial_nspec$col_norm/15
spatial_nspec$norm_isl[spatial_nspec$norm_isl<1.2] <- 1.2

spatial_nspec <- spatial_nspec[order(spatial_nspec$x),]
# cbind(regions$Region,spatial_nspec$Region)


x11(width=8,height=3.3)
# png("../Figures/Worldmap_NumberTaxa.png",unit="in",width=8,height=3.3,res=300)
# png("../Figures/Worldmap_NumberTaxa_GRIISInvasive.png",unit="in",width=8,height=3.3,res=300)
layout(matrix(1:2,nc=2),widths=c(0.85,0.15))
op <- par(mar=c(0,0,0,0),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))

plot(st_geometry(spatial_nspec),col=spatial_nspec$col,lwd=0.5)

isl_dat <- subset(spatial_nspec,Region%in%islands)
for (i in 1:nrow(isl_dat)){
  points(isl_dat$Lon[i],isl_dat$Lat[i],pch=1,cex=isl_dat$norm_isl[i]+0.4,col="black",lwd=2)
  points(isl_dat$Lon[i],isl_dat$Lat[i],pch=1,cex=isl_dat$norm_isl[i],col=isl_dat$col[i],lwd=3)
}

plot(1:10,axes=F,type="n")
owncolleg(posx=c(0.1,0.2),posy=c(0.1,0.95),col=cols,cex=1.2,digit=0,zlim=c(1,4000))#,">2000"
text(x=0.8,y=0.6,labels="Number of taxa",srt=270,cex=1.2)
# text(x=0.8,y=0.6,labels="Number of invasive species",srt=270,cex=1.2)
mtext(">",side=3,line=-1.27,adj=0.27)
par(op)
# dev.off()
