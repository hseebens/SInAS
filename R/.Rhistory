length(p1)
length(p2)
p2[p2%in%p1]
rm(list=ls())
graphics.off()
# library(rgdal) # only used for plotting
# library(sf)
# library(data.table)
library(CASPIAN)
source('~/Bioinvasion/EBAspread/getCalibrationResults.r')
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
parm_names <- c("alpha[AS]","alpha[AR]","c","d","g","alpha[FS]","alpha[FS]","h","k","a","b","beta[1]") # terrestrial
graphics.off()
x11(height=7,width=6)
# png("/home/hanno/Bioinvasion/EBAspread/Figures/CalibrationResults_Senecio1.png",unit="in",width=6,height=7,res=300)
op <- par(oma=c(2,0,1.5,0),mar=c(1,5,1,0.5),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))
# layout(matrix(1:(dim(samps[[1]])[2]*2),nc=2,byrow = T))
layout(matrix(1:(6*2),nc=2,byrow = T))
# for (j in 1:dim(samps[[1]])[2]){
for (j in 1:6){
## traceplots ##########
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="")
axis(1,at=pretty(c(1,nrow(dat_parm))),labels = F)
if (j==1) mtext("Traceplots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Iteration",side=1,line=1.7,cex=0.8)
mtext(parse(text=parm_names[j]),side=2,font=2,las=2,line=3.3)
for (i in 1:length(samps)){
lines(dat_parm[,i],col=i,lwd=0.8,lty=i)
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
# lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.3),lwd=1,col=i)
}
for (i in 1:length(samps)){
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.6),lwd=1,col=i)
}
## density plots ##############
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T,numSamples = 10000)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
dens <- density(dat_parm)
plot(dens, main="",ylab="")
# rug(dat_parm)
if (j==1) mtext("Density plots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Parameter value",side=1,line=1.7,cex=0.8)
if (j==3){
mtext("Density",side=2,las=0,line=4,cex=0.8)
} else { mtext("Density",side=2,las=0,line=2,cex=0.8)}
# plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="",xaxt="n")
}
par(op)
# dev.off()
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
parm_names <- c("alpha[AS]","alpha[AR]","c","d","g","alpha[FS]","alpha[FS]","h","k","a","b","beta[1]") # terrestrial
graphics.off()
x11(height=7,width=6)
# png("/home/hanno/Bioinvasion/EBAspread/Figures/CalibrationResults_Senecio1.png",unit="in",width=6,height=7,res=300)
op <- par(oma=c(2,0,1.5,0),mar=c(1,5,1,0.5),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))
# layout(matrix(1:(dim(samps[[1]])[2]*2),nc=2,byrow = T))
layout(matrix(1:(6*2),nc=2,byrow = T))
# for (j in 1:dim(samps[[1]])[2]){
for (j in 1:6){
## traceplots ##########
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="")
axis(1,at=pretty(c(1,nrow(dat_parm))),labels = F)
if (j==1) mtext("Traceplots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Iteration",side=1,line=1.7,cex=0.8)
mtext(parse(text=parm_names[j]),side=2,font=2,las=2,line=3.1)
for (i in 1:length(samps)){
lines(dat_parm[,i],col=i,lwd=0.8,lty=i)
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
# lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.3),lwd=1,col=i)
}
for (i in 1:length(samps)){
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.6),lwd=1,col=i)
}
## density plots ##############
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T,numSamples = 10000)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
dens <- density(dat_parm)
plot(dens, main="",ylab="")
# rug(dat_parm)
if (j==1) mtext("Density plots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Parameter value",side=1,line=1.7,cex=0.8)
if (j%in%c(1,2)){
mtext("Density",side=2,las=0,line=4,cex=0.8)
} else { mtext("Density",side=2,las=0,line=2,cex=0.8)}
# plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="",xaxt="n")
}
par(op)
# dev.off()
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
parm_names <- c("alpha[AS]","alpha[AR]","c","d","g","alpha[FS]","alpha[FS]","h","k","a","b","beta[1]") # terrestrial
graphics.off()
x11(height=7,width=6)
# png("/home/hanno/Bioinvasion/EBAspread/Figures/CalibrationResults_Senecio1.png",unit="in",width=6,height=7,res=300)
op <- par(oma=c(2,0,1.5,0),mar=c(1,5,1,0.5),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))
# layout(matrix(1:(dim(samps[[1]])[2]*2),nc=2,byrow = T))
layout(matrix(1:(6*2),nc=2,byrow = T))
# for (j in 1:dim(samps[[1]])[2]){
for (j in 1:6){
## traceplots ##########
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="")
axis(1,at=pretty(c(1,nrow(dat_parm))),labels = F)
if (j==1) mtext("Traceplots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Iteration",side=1,line=1.7,cex=0.8)
mtext(parse(text=parm_names[j]),side=2,font=2,las=2,line=2.8)
for (i in 1:length(samps)){
lines(dat_parm[,i],col=i,lwd=0.8,lty=i)
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
# lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.3),lwd=1,col=i)
}
for (i in 1:length(samps)){
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.6),lwd=1,col=i)
}
## density plots ##############
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T,numSamples = 10000)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
dens <- density(dat_parm)
plot(dens, main="",ylab="")
# rug(dat_parm)
if (j==1) mtext("Density plots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Parameter value",side=1,line=1.7,cex=0.8)
if (j%in%c(1,2)){
mtext("Density",side=2,las=0,line=4,cex=0.8)
} else { mtext("Density",side=2,las=0,line=2,cex=0.8)}
# plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="",xaxt="n")
}
par(op)
# dev.off()
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
parm_names <- c("alpha[AS]","alpha[AR]","c","d","g","alpha[FS]","alpha[FS]","h","k","a","b","beta[1]") # terrestrial
graphics.off()
x11(height=7,width=6)
png("/home/hanno/Bioinvasion/EBAspread/Figures/CalibrationResults_Senecio1.png",unit="in",width=6,height=7,res=300)
op <- par(oma=c(2,0,1.5,0),mar=c(1,5,1,0.5),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))
# layout(matrix(1:(dim(samps[[1]])[2]*2),nc=2,byrow = T))
layout(matrix(1:(6*2),nc=2,byrow = T))
# for (j in 1:dim(samps[[1]])[2]){
for (j in 1:6){
## traceplots ##########
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="")
axis(1,at=pretty(c(1,nrow(dat_parm))),labels = F)
if (j==1) mtext("Traceplots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Iteration",side=1,line=1.7,cex=0.8)
mtext(parse(text=parm_names[j]),side=2,font=2,las=2,line=2.8)
for (i in 1:length(samps)){
lines(dat_parm[,i],col=i,lwd=0.8,lty=i)
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
# lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.3),lwd=1,col=i)
}
for (i in 1:length(samps)){
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.6),lwd=1,col=i)
}
## density plots ##############
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T,numSamples = 10000)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
dens <- density(dat_parm)
plot(dens, main="",ylab="")
# rug(dat_parm)
if (j==1) mtext("Density plots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Parameter value",side=1,line=1.7,cex=0.8)
if (j%in%c(1,2)){
mtext("Density",side=2,las=0,line=4,cex=0.8)
} else { mtext("Density",side=2,las=0,line=2,cex=0.8)}
# plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="",xaxt="n")
}
par(op)
dev.off()
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
parm_names <- c("alpha[AS]","alpha[AR]","c","d","g","alpha[FS]","alpha[FS]","h","k","a","b","beta[1]") # terrestrial
graphics.off()
x11(height=7,width=6)
# png("/home/hanno/Bioinvasion/EBAspread/Figures/CalibrationResults_Senecio1.png",unit="in",width=6,height=7,res=300)
op <- par(oma=c(2,0,1.5,0),mar=c(1,5,1,0.5),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))
# layout(matrix(1:(dim(samps[[1]])[2]*2),nc=2,byrow = T))
layout(matrix(1:(6*2),nc=2,byrow = T))
# for (j in 1:dim(samps[[1]])[2]){
for (j in 7:12){
## traceplots ##########
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="")
axis(1,at=pretty(c(1,nrow(dat_parm))),labels = F)
if (j==1) mtext("Traceplots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Iteration",side=1,line=1.7,cex=0.8)
mtext(parse(text=parm_names[j]),side=2,font=2,las=2,line=2.8)
for (i in 1:length(samps)){
lines(dat_parm[,i],col=i,lwd=0.8,lty=i)
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
# lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.3),lwd=1,col=i)
}
for (i in 1:length(samps)){
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.6),lwd=1,col=i)
}
## density plots ##############
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T,numSamples = 10000)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
dens <- density(dat_parm)
plot(dens, main="",ylab="")
# rug(dat_parm)
if (j==1) mtext("Density plots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Parameter value",side=1,line=1.7,cex=0.8)
if (j%in%c(1,2)){
mtext("Density",side=2,las=0,line=4,cex=0.8)
} else { mtext("Density",side=2,las=0,line=2,cex=0.8)}
# plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="",xaxt="n")
}
par(op)
# dev.off()
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
parm_names <- c("alpha[AS]","alpha[AR]","c","d","g","alpha[FS]","alpha[FS]","h","k","a","b","beta[1]") # terrestrial
graphics.off()
x11(height=7,width=6)
png("/home/hanno/Bioinvasion/EBAspread/Figures/CalibrationResults_Senecio2.png",unit="in",width=6,height=7,res=300)
op <- par(oma=c(2,0,1.5,0),mar=c(1,5,1,0.5),las=1,cex=0.9,tck=-0.02,mgp=c(2,0.3,0))
# layout(matrix(1:(dim(samps[[1]])[2]*2),nc=2,byrow = T))
layout(matrix(1:(6*2),nc=2,byrow = T))
# for (j in 1:dim(samps[[1]])[2]){
for (j in 7:12){
## traceplots ##########
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="")
axis(1,at=pretty(c(1,nrow(dat_parm))),labels = F)
if (j==1) mtext("Traceplots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Iteration",side=1,line=1.7,cex=0.8)
mtext(parse(text=parm_names[j]),side=2,font=2,las=2,line=2.8)
for (i in 1:length(samps)){
lines(dat_parm[,i],col=i,lwd=0.8,lty=i)
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
# lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.3),lwd=1,col=i)
}
for (i in 1:length(samps)){
# lines(smooth.spline(c(1:nrow(dat_parm)),dat_parm[,i],spar=0.9),col=i)
lines(loess.smooth(c(1:nrow(dat_parm)),dat_parm[,i],span=0.6),lwd=1,col=i)
}
## density plots ##############
samps <-getSample(resDREAM,parametersOnly = TRUE,coda=T,numSamples = 10000)
dat_parm <- matrix(NA,nc=length(samps),nr=dim(samps[[1]])[1])
for (i in 1:length(samps)){
dat_parm[,i] <- samps[[i]][,j]
}
dens <- density(dat_parm)
plot(dens, main="",ylab="")
# rug(dat_parm)
if (j==1) mtext("Density plots",side=3,line=0.5,font=2)
if (j==dim(samps[[1]])[2]) mtext("Parameter value",side=1,line=1.7,cex=0.8)
if (j%in%c(1,2)){
mtext("Density",side=2,las=0,line=4,cex=0.8)
} else { mtext("Density",side=2,las=0,line=2,cex=0.8)}
# plot(1:10,y=seq(min(dat_parm),max(dat_parm),length.out=10),xlim=c(1,nrow(dat_parm)),type="n",xlab="",ylab="",xaxt="n")
}
par(op)
dev.off()
x<-getSample(resDREAM,parametersOnly = TRUE,numSamples = 10000,coda=F)
# summary(x)
apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975)))
# summary(x)
parm_values <- apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975)))
# summary(x)
parm_values <- round(apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975))),3)
parm_values
# summary(x)
parm_values <- apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975)))
parm_values[,3:12] <- round(parm_values[,3:12],3)
parm_values
parm_values[,1:2] <- round(parm_values[,1:2],5)
parm_values
# summary(x)
parm_values <- t(apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975))))
parm_values <- t(apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975))))
parm_values[3:12,] <- round(parm_values[3:12,],3)
parm_values
# parm_values[,1:2] <- round(parm_values[,1:2],5)
write.table(parm_values,"/home/hanno/Bioinvasion/EBAspread/Data/Parms_Senecio.csv")
apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975)))
parm_values <- t(apply(x,2,function(s) quantile(s,c(0.025,0.5,0.975))))
parm_values[3:12,] <- round(parm_values[3:12,],3)
# parm_values[,1:2] <- round(parm_values[,1:2],5)
write.table(parm_values,"/home/hanno/Bioinvasion/EBAspread/Data/Parms_Senecio.csv",sep=";")
library(lme4)
?glmm
?lme
?glme
?lme4
plnorm(seq(0,1,length.out=ts_sizeinvaderpool[l,2]),meanlog=-2,sdlog=1)
plnorm(seq(0,1,length.out=1000),meanlog=-2,sdlog=1)
hist(plnorm(seq(0,1,length.out=1000),meanlog=-2,sdlog=1))
hist(plnorm(seq(0,1,length.out=10000),meanlog=-2,sdlog=1))
hist(plnorm(seq(0,1,length.out=10000),meanlog=2,sdlog=1))
hist(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1))
?plnorm
hist(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1))
hist(plnorm(seq(0,1,length.out=1000),meanlog=0,sdlog=1))
hist(dlnorm(seq(0,1,length.out=1000),meanlog=0,sdlog=1))
hist(dlnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1))
hist(plnorm(seq(0,1,length.out=1000),meanlog=0,sdlog=1))
hist(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1))
hist(log(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1)))
hist(exp(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1)))
hist(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1))
hist(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1),100)
hist(plnorm(seq(0,1,length.out=1000),meanlog=-2,sdlog=1),100)
hist(plnorm(seq(0,1,length.out=1000),meanlog=2,sdlog=1),100)
hist(plnorm(seq(0,1,length.out=1000),meanlog=-2,sdlog=1),100)
dnorm(0,mean=0,sd=1)
dnorm(0,mean=0,sd=1)
pnorm(0,mean=0,sd=1)
pnorm(0,mean=0,sd=1)
pnorm(1,mean=0,sd=1)
pnorm(-1,mean=0,sd=1)
pnorm(seq(-3,3,0.1),mean=0,sd=1)
plot(pnorm(seq(-3,3,0.1),mean=0,sd=1))
plot(plnorm(seq(-3,3,0.1),mean=0,sd=1))
plot(plnorm(seq(1,3,0.1),meanlog=0,sdlog=1))
plot(plnorm(seq(1,100,0.1),meanlog=0,sdlog=1))
hist(plnorm(seq(1,100,0.1),meanlog=0,sdlog=1))
install.packages(mobsim)
install.packages("mobsim")
abund1 <- sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",
sad_coef = list("meanlog" = 5, "sdlog" = 0.5))
library(mobsim)
abund1 <- sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",
sad_coef = list("meanlog" = 5, "sdlog" = 0.5))
abund1
hist(abund1)
hist(sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",sad_coef = list("meanlog" = 5, "sdlog" = 0.5)))
hist(sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",sad_coef = list("meanlog" = 0, "sdlog" = 0.5)))
hist(sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",sad_coef = list("meanlog" = 2, "sdlog" = 1)))
hist(sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",sad_coef = list("meanlog" = -2, "sdlog" = 1)))
hist(sim_sad(s_pool = 100, n_sim = 1000, sad_type = "lnorm",sad_coef = list("meanlog" = 0, "sdlog" = 1)))
hist(sim_sad(s_pool = 1000, n_sim = 1000, sad_type = "lnorm",sad_coef = list("meanlog" = 0, "sdlog" = 1)))
?sim_sad
hist(sim_sad(s_pool = 1000, n_sim = 10000, sad_type = "lnorm",sad_coef = list("meanlog" = 0, "sdlog" = 1)))
hist(sim_sad(s_pool = 1000, n_sim = 100000, sad_type = "lnorm",sad_coef = list("meanlog" = 0, "sdlog" = 1)))
hist(sim_sad(s_pool = 1000, n_sim = 100000, sad_type = "lnorm",sad_coef = list("meanlog" = -2, "sdlog" = 1)))
hist(sim_sad(s_pool = 1000, n_sim = 100000, sad_type = "lnorm",sad_coef = list("meanlog" = 2, "sdlog" = 1)))
citation(optim)
optim
?optim
install.packages("wesanderson")
library(wesanderson)
wes_palette("Royal")
wes_palette("Royall")
wes_palette("Royal1")
a <- wes_palette("Royal1")
??wesanderson
dlnorm(1)
?rlnorm
plnorm(0.5)
plnorm(seq(0,1,0.1))
plot(plnorm(seq(0,1,0.1)))
plot(qlnorm(seq(0,1,0.1)))
plot(dlnorm(seq(0,1,0.1)))
plot(dlnorm(seq(0,1,0.01)))
here()
library(here)
message("Hello")
cat("Hello")
warning("Hello")
file.path()
file.path("R","folder1")
library(devtools)
install_github("iobis/robis")
library(robis)
help(package = "robis")
taxa <- checklist(scientificname = "Tellinidae")
taxa
taxa <- checklist(scientificname = "Acrochaetium mediterraneum")
taxa <- checklist(scientificname = "Coregonus albula")
taxa
taxa <- checklist(scientificname = "Coregonus nasus")
taxa
taxa <- checklist(scientificname = "Ctenopharyngodon idella")
taxa <- checklist(scientificname = "Cyprinidae")
taxa
taxa <- checklist(scientificname = "Cyprinus carpio")
taxa
taxa <- checklist(scientificname = "Dicentrarchus labrax")
taxa
taxa <- checklist(scientificname = "Epinephelus coioides")
taxa
?freead
?fread
library(data.table)
?fread
install.packages("CoordinateCleaner")
install.packages("CoordinateCleaner")
library("CoordinateCleaner")
install.packages("CoordinateCleaner")
install.packages("scales")
install.packages("colorspace")
install.packages("scales")
install.packages("geoaxe")
install.packages("rgeos")
install.packages("geoaxe")
install.packages("ggplot2")
install.packages("CoordinateCleaner")
install.packages("class")
install.packages("sf")
install.packages("CoordinateCleaner")
install.packages("geosphere")
install.packages("CoordinateCleaner")
old.pacakges()
old.packages()
install.packages("CoordinateCleaner")
library("CoordinateCleaner")
??CoordinateCleaner
file.path()
file.path("home","hanno","Bioinvasion","IndicatorAliens","Workflow")
## set working directory; requires a sub-folder named "Data" including all relevant data files
setwd(file.path("home","hanno","Bioinvasion","IndicatorAliens","Workflow")) # set working directory
file.path("home","hanno","Bioinvasion","IndicatorAliens","Workflow")
## set working directory; requires a sub-folder named "Data" including all relevant data files
setwd(file.path("home","hanno","Bioinvasion","IndicatorAliens","Workflow", expandLinks="relative")) # set working directory
file.path("home","hanno","Bioinvasion","IndicatorAliens","Workflow", expandLinks="relative")
file.path("home","hanno","Bioinvasion","IndicatorAliens","Workflow", removeUps=F)
?system.file
## set working directory; requires a sub-folder named "Data" including all relevant data files
setwd(file.path(c("home","hanno","Bioinvasion","IndicatorAliens","Workflow"), removeUps=F)) # set working directory
file.path(c("home","hanno","Bioinvasion","IndicatorAliens","Workflow"), removeUps=F)
citation(9)
citation()
getwd()
## set working directory; requires a sub-folder named "Data" including all relevant data files
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
setwd(getwd())
getwd()
setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow")
setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow/R")
## set working directory; requires a sub-folder named "Data" including all relevant data files
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
setwd(getwd())
getwd()
## set working directory; requires a sub-folder named "Data" including all relevant data files
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
wd <- getwd()
wd
## set working directory; requires a sub-folder named "Data" including all relevant data files
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
wd <- gsub("R$","",getwd())
wd
setwd(wd)
getwd()
## set working directory; requires a sub-folder named "Data" including all relevant data files
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
wd <- gsub("R$","",getwd())
wd
getwd()
setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow/R")
## set working directory; requires a sub-folder named "Data" including all relevant data files
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
wd <- gsub("R$","",getwd())
wd
setwd(wd)
getwd()
## set working directory
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
wd <- gsub("W$","",getwd())
wd
setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow/R")
## set working directory
# setwd("/home/hanno/Bioinvasion/IndicatorAliens/Workflow") # set working directory
wd <- gsub("W$","",getwd())
wd
getwd()
here()
library(here)
